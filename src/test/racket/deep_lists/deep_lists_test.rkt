#lang racket
(require "../../../main/racket/deep_lists/deep_lists.rkt")
(require "../unit_testing/unit_testing.rkt")
(define-namespace-anchor namespace-anchor)
(define namespace (namespace-anchor->namespace namespace-anchor))

(suite-enter "deep_list_tests")

(suite-enter "deep-foldl")
   (assert-eval-equal? 0 '(deep-foldl + 0 '()) namespace)
   (assert-eval-equal? 2 '(deep-foldl + 2 '()) namespace)
   (assert-eval-equal? 1 '(deep-foldl + 0 '(1)) namespace)
   (assert-eval-equal? 3 '(deep-foldl + 2 '(1)) namespace)
   (assert-eval-equal? 7 '(deep-foldl + 0 '(3 4)) namespace)
   (assert-eval-equal? 9 '(deep-foldl + 2 '(3 4)) namespace)
   (assert-eval-equal? 10 '(deep-foldl + 0 '(1 2 3 4)) namespace)
   (assert-eval-equal? 12 '(deep-foldl + 2 '(1 2 3 4)) namespace)
   (assert-eval-equal? 10 '(deep-foldl + 0 (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? 12 '(deep-foldl + 2 (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? 78 '(deep-foldl + 0 (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
   (assert-eval-equal? 80 '(deep-foldl + 2 (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
(suite-leave)

(suite-enter "deep-foldr")
   (assert-eval-equal? 0 '(deep-foldr + 0 '()) namespace)
   (assert-eval-equal? 2 '(deep-foldr + 2 '()) namespace)
   (assert-eval-equal? 1 '(deep-foldr + 0 '(1)) namespace)
   (assert-eval-equal? 3 '(deep-foldr + 2 '(1)) namespace)
   (assert-eval-equal? 7 '(deep-foldr + 0 '(3 4)) namespace)
   (assert-eval-equal? 9 '(deep-foldr + 2 '(3 4)) namespace)
   (assert-eval-equal? 10 '(deep-foldr + 0 '(1 2 3 4)) namespace)
   (assert-eval-equal? 12 '(deep-foldr + 2 '(1 2 3 4)) namespace)
   (assert-eval-equal? 10 '(deep-foldr + 0 (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? 12 '(deep-foldr + 2 (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? 78 '(deep-foldr + 0 (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
   (assert-eval-equal? 80 '(deep-foldr + 2 (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
(suite-leave)

(suite-enter "deep-flatten")
   (assert-eval-equal? '() '(deep-flatten '()) namespace)
   (assert-eval-equal? '(1) '(deep-flatten '(1)) namespace)
   (assert-eval-equal? '(1 2) '(deep-flatten '(1 2)) namespace)
   (assert-eval-equal? '(1 2 3 4) '(deep-flatten '(1 2 3 4)) namespace)
   (assert-eval-equal? '(1 2 3 4) '(deep-flatten (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? '(1 2 3 4 5 6 7 8 9 10 11 12) '(deep-flatten (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
   (assert-eval-equal? '(1 2 3 "fred" 4 5 6 7 8 9 "george" 10 11 12) '(deep-flatten (list 1 2 (list 3 "fred" 4 5) 6 (list 7 8 (list 9 "george" 10) 11 12))) namespace)
(suite-leave)

(suite-enter "deep-sum")
   (assert-eval-equal? 0 '(deep-sum '()) namespace)
   (assert-eval-equal? 1 '(deep-sum '(1)) namespace)
   (assert-eval-equal? 3 '(deep-sum '(1 2)) namespace)
   (assert-eval-equal? 10 '(deep-sum '(1 2 3 4)) namespace)
   (assert-eval-equal? 10 '(deep-sum (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? 78 '(deep-sum (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
(suite-leave)

(suite-enter "deep-sum-numbers")
   (assert-eval-equal? 0 '(deep-sum-numbers '()) namespace)
   (assert-eval-equal? 1 '(deep-sum-numbers '(1)) namespace)
   (assert-eval-equal? 3 '(deep-sum-numbers '(1 2)) namespace)
   (assert-eval-equal? 10 '(deep-sum-numbers '(1 2 3 4)) namespace)
   (assert-eval-equal? 10 '(deep-sum-numbers (list 1 '(2 3) 4)) namespace)
   (assert-eval-equal? 78 '(deep-sum-numbers (list 1 2 (list 3 4 5) 6 (list 7 8 (list 9 10) 11 12))) namespace)
   (assert-eval-equal? 0 '(deep-sum-numbers (list "fred" "george")) namespace)
   (assert-eval-equal? 78 '(deep-sum-numbers (list 1 2 (list 3 "fred" 4 5) 6 (list 7 8 (list 9 "george" 10) 11 12))) namespace)
(suite-leave)

(suite-leave)
